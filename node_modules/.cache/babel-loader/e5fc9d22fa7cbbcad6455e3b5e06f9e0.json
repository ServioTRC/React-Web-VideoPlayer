{"ast":null,"code":"import _objectSpread from \"/Users/servio/Documents/GitHub/React-Web-VideoPlayer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/servio/Documents/GitHub/React-Web-VideoPlayer/src/components/hoc/withLink.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nvar withLink = function withLink(WrappedComponent) {\n  return function (props) {\n    var newProps = _objectSpread({}, props, {\n      video: _objectSpread({}, props.video, {\n        title: React.createElement(Link, {\n          to: {\n            pathname: \"/\".concat(props.video.id),\n            autoplay: true\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, props.video.title)\n      })\n    });\n\n    return React.createElement(WrappedComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  };\n};\n\nexport default withLink;","map":{"version":3,"sources":["/Users/servio/Documents/GitHub/React-Web-VideoPlayer/src/components/hoc/withLink.js"],"names":["React","Link","withLink","WrappedComponent","props","newProps","video","title","pathname","id","autoplay"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,gBAAgB;AAAA,SAAI,UAAAC,KAAK,EAAI;AAC1C,QAAMC,QAAQ,qBACPD,KADO;AAEVE,MAAAA,KAAK,oBACEF,KAAK,CAACE,KADR;AAEDC,QAAAA,KAAK,EACD,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AAACC,YAAAA,QAAQ,aAAMJ,KAAK,CAACE,KAAN,CAAYG,EAAlB,CAAT;AAAiCC,YAAAA,QAAQ,EAAE;AAA3C,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKN,KAAK,CAACE,KAAN,CAAYC,KADjB;AAHH;AAFK,MAAd;;AAWA,WAAO,oBAAC,gBAAD,oBAAsBH,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAbgC;AAAA,CAAjC;;AAeA,eAAeF,QAAf","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst withLink = WrappedComponent => props => {\n    const newProps = {\n        ...props,\n        video: {\n            ...props.video,\n            title: (\n                <Link to={{pathname: `/${props.video.id}`, autoplay: true}}>\n                    {props.video.title}\n                </Link>\n            )\n        }\n    };\n    return <WrappedComponent {...props} />;\n}\n\nexport default withLink;"]},"metadata":{},"sourceType":"module"}